{"version":3,"sources":["logo.svg","components/formInputs/TextError.js","components/formInputs/Input.js","components/formInputs/Textarea.js","components/formInputs/Select.js","components/formInputs/RadioButtons.js","components/formInputs/CheckboxGroup.js","components/formInputs/DatePicker.js","components/FormikControl.js","components/RegistrationForm.js","App.js","reportWebVitals.js","index.js"],"names":["TextError","props","className","children","Input","label","name","rest","htmlFor","id","component","Textarea","as","Select","options","map","option","value","key","RadioButtons","field","Fragment","type","checked","CheckboxGroup","includes","DatePicker","form","setFieldValue","selected","onChange","val","FormikControl","control","RegistrationForm","dropdownOptions","checkboxOptions","validationSchema","Yup","email","required","password","confirmPassword","oneOf","modeOfContact","phone","when","is","then","course","skills","min","max","courseDate","nullable","initialValues","onSubmit","values","console","log","alert","JSON","stringify","formik","disabled","isValid","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b24aff5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nfunction TextError(props) {\r\n    return (\r\n        <div className='error'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from 'formik';\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Input(props) {\r\n  //deconstruct props\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field id={name} name={name} {...rest} />\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Textarea(props) {\r\n    //deconstruct props\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field as=\"textarea\" id={name} name={name} {...rest} />\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Textarea;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction Select(props) {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field as=\"select\" id={name} name={name} {...rest}>\r\n        {options.map((option) => {\r\n          return (\r\n            <option key={option.value} value={option.value}>\r\n              {option.key}\r\n            </option>\r\n          );\r\n        })}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from './TextError'\r\n\r\nfunction RadioButtons(props) {\r\n    const { label, name, options, ...rest } = props\r\n    return (\r\n        <div className='form-control'>\r\n      <label>{label}</label>\r\n      <Field name={name} >\r\n        {({ field }) => {\r\n          return options.map(option => {\r\n            return (\r\n              <React.Fragment key={option.key}>\r\n                <input\r\n                  type='radio'\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value === option.value}\r\n                />\r\n                <label htmlFor={option.value}>{option.key}</label>\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        }}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RadioButtons\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nfunction CheckboxGroup(props) {\r\n  const { label, name, options, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label>{label}</label>\r\n      <Field name={name}>\r\n        {({ field }) => {\r\n          return options.map((option) => {\r\n            return (\r\n              <React.Fragment key={option.key}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={option.value}\r\n                  {...field}\r\n                  {...rest}\r\n                  value={option.value}\r\n                  checked={field.value.includes(option.value)}\r\n                />\r\n                <label htmlFor={option.value}>{option.key}</label>\r\n              </React.Fragment>\r\n            );\r\n          });\r\n        }}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckboxGroup;\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport DateView from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport TextError from \"./TextError\";\r\n\r\nfunction DatePicker(props) {\r\n  const { label, name, ...rest } = props;\r\n  return (\r\n    <div className=\"form-control\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <Field name={name}>\r\n        {({ form, field }) => {\r\n          const { setFieldValue } = form;\r\n          const { value } = field;\r\n          return (\r\n            <DateView\r\n              id={name}\r\n              {...field}\r\n              {...rest}\r\n              selected={value}\r\n              onChange={(val) => setFieldValue(name, val)}\r\n            />\r\n          );\r\n        }}\r\n      </Field>\r\n      <ErrorMessage component={TextError} name={name} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DatePicker;\r\n","import React from 'react'\r\nimport Input from \"./formInputs/Input\"\r\nimport Textarea from \"./formInputs/Textarea\"\r\nimport Select from \"./formInputs/Select\"\r\nimport RadioButtons from \"./formInputs/RadioButtons\"\r\nimport CheckboxGroup from \"./formInputs/CheckboxGroup\"\r\nimport DatePicker from \"./formInputs/DatePicker\"\r\n\r\nfunction FormikControl (props) {\r\n    const { control, ...rest } = props\r\n    switch (control) {\r\n      case 'input':\r\n        return <Input {...rest} />\r\n      case 'textarea':\r\n        return <Textarea {...rest} />\r\n      case 'select':\r\n        return <Select {...rest} />\r\n      case 'radio':\r\n        return <RadioButtons {...rest} />\r\n      case 'checkbox':\r\n        return <CheckboxGroup {...rest} />\r\n      case 'date':\r\n        return <DatePicker {...rest} />\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n  \r\nexport default FormikControl","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"./FormikControl\";\r\n\r\nfunction RegistrationForm() {\r\n  const options = [\r\n    { key: \"Email\", value: \"emailmoc\" },\r\n    { key: \"Telephone\", value: \"telephonemoc\" },\r\n  ];\r\n\r\n  const dropdownOptions = [\r\n    { key: \"Select your course\", value: \"\" },\r\n    { key: \"React\", value: \"react\" },\r\n    { key: \"Angular\", value: \"angular\" },\r\n    { key: \"Vue\", value: \"vue\" },\r\n  ];\r\n\r\n  const checkboxOptions = [\r\n    { key: 'HTML', value: 'html' },\r\n    { key: 'CSS', value: 'css' },\r\n    { key: 'JavaScript', value: 'javascript' }\r\n  ]\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    modeOfContact: \"\",\r\n    phone: \"\",\r\n    skills: [],\r\n    courseDate: null,\r\n  };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), \"\"], \"Passwords must match\")\r\n      .required(\"Required\"),\r\n    modeOfContact: Yup.string().required(\"Required\"),\r\n    phone: Yup.string().when(\"modeOfContact\", {\r\n      is: \"telephonemoc\",\r\n      then: Yup.string().required(\"Required\"),\r\n    }),\r\n    course: Yup.string().required(\"Required\"),\r\n    skills: Yup.array()\r\n    .min(1)\r\n    .max(3).required(\"Required\"),\r\n    courseDate: Yup.date().required(\"Required\").nullable()\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    console.log(\"Form data\", values);\r\n    alert(JSON.stringify(values) )\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={onSubmit}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <Form>\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"password\"\r\n              label=\"Confirm Password\"\r\n              name=\"confirmPassword\"\r\n            />\r\n            <FormikControl\r\n              control=\"radio\"\r\n              label=\"Mode of contact\"\r\n              name=\"modeOfContact\"\r\n              options={options}\r\n            />\r\n            <FormikControl\r\n              control=\"input\"\r\n              type=\"text\"\r\n              label=\"Phone number\"\r\n              name=\"phone\"\r\n            />\r\n            <FormikControl\r\n              control=\"select\"\r\n              label=\"Course\"\r\n              name=\"course\"\r\n              options={dropdownOptions}\r\n            />\r\n             <FormikControl\r\n              control='checkbox'\r\n              label='Your skillset'\r\n              name='skills'\r\n              options={checkboxOptions}\r\n            />\r\n            <FormikControl\r\n            control='date'\r\n            label='Pick a date'\r\n            name='courseDate'\r\n          />\r\n            <button className=\"button button-submit\" type=\"submit\" disabled={!formik.isValid}>\r\n              Submit\r\n            </button>\r\n            <button className=\"button button-reset\" type=\"reset\">\r\n              Reset\r\n            </button>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport RegistrationForm from './components/RegistrationForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RegistrationForm></RegistrationForm>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}